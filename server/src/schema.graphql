type Query {
  # User Queries
  user(id: ID!): User
  users: [User]

  # Cart Queries
  cart(id: ID!): Cart
  carts: [Cart]

  # Product Queries
  product(id: ID!): Product
  products: [Product]
}

type Mutation {
  # Product Mutations
  createProduct(input: CreateProductInput!): Product
  updateProduct(
    id: ID!,
    name: String,
    price: Float,
    description: String,
    category: String,
    stock: Int,
    imageUrl: String,
    sku: String,
    quantity: Int,
    wishlist: Boolean,
    specialOffer: String,
    shippingInfo: String,
    brandInfo: String
  ): Product
}

input CreateProductInput {
  name: String!
  price: Float!
  description: String!
  category: String!
  stock: Int!
  imageUrl: String!
  sku: String!
  quantity: Int!
  wishlist: Boolean
  specialOffer: String
  shippingInfo: String
  brandInfo: String!
  createdBy: ID!
  updatedBy: ID!
}

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  isAdmin: Boolean!
}

type Cart {
  id: ID!
  items: [CartItem!]!
  promoCode: String
  total: Float!
  user: User!
}

type CartItem {
  product: Product!
  quantity: Int!
  price: Float!
}

type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  category: String!
  stock: Int!
  imageUrl: String!
  sku: String!
  quantity: Int!
  wishlist: Boolean
  specialOffer: String
  shippingInfo: String
  brandInfo: String!
  createdBy: User!
  updatedBy: User!
}